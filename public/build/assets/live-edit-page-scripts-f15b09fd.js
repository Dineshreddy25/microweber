if(window.self!==window.top){mw.require("liveedit.css"),mw.require("moveable.js"),mw.lib.require("jqueryui"),mw.liveEditSaveService={grammarlyFix:function(e){return mw.$("grammarly-btn",e).remove(),mw.$("grammarly-card",e).remove(),mw.$("g.gr_",e).each(function(){mw.$(this).replaceWith(this.innerHTML)}),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("[data-gramm]",e).removeAttr("data-gramm"),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("grammarly-card",e).remove(),mw.$("grammarly-inline-cards",e).remove(),mw.$("grammarly-popups",e).remove(),mw.$("grammarly-extension",e).remove(),e},saving:!1,coreSave:function(e){if(!e)return!1;$.each(e,function(){var t=mw.tools.parseHtml(this.html).body;mw.liveEditSaveService.grammarlyFix(t),mw.liveEditSaveService.animationsClearFix(t),this.html=t.innerHTML}),mw.liveEditSaveService.saving=!0,e.from_url=window.location.href,typeof mw.liveEditIframeData<"u"&&(typeof mw.liveEditIframeData.content_link<"u"&&(e.from_url=mw.liveEditIframeData.content_link),typeof mw.liveEditIframeData.multiLanguageCurrentLanguage<"u"&&(e.lang=mw.liveEditIframeData.multiLanguageCurrentLanguage)),e=JSON.stringify(e),e=btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,function(i,r){return String.fromCharCode("0x"+r)})),e={data_base64:e};var a=mw.ajax({type:"POST",url:mw.settings.api_url+"save_edit",data:e,dataType:"json",success:function(t){t&&t.new_page_url&&!mw.liveEditSaveService.DraftSaving&&(window.mw.parent().askusertostay=!1,window.mw.askusertostay=!1,window.location.href=t.new_page_url)}});return a.always(function(){mw.liveEditSaveService.saving=!1}),a},parseContent:function(e){e=e||document.body;var a=mw.tools.parseHtml(e.innerHTML);mw.$(".element-current",a).removeClass("element-current"),mw.$(".element-active",a).removeClass("element-active"),mw.$(".disable-resize",a).removeClass("disable-resize"),mw.$(".mw-module-drag-clone",a).removeClass("mw-module-drag-clone"),mw.$(".ui-draggable",a).removeClass("ui-draggable"),mw.$(".ui-draggable-handle",a).removeClass("ui-draggable-handle"),mw.$(".mt-ready",a).removeClass("mt-ready"),mw.$(".mw-webkit-drag-hover-binded",a).removeClass("mw-webkit-drag-hover-binded"),mw.$(".module-cat-toggle-Modules",a).removeClass("module-cat-toggle-Modules"),mw.$(".mw-module-drag-clone",a).removeClass("mw-module-drag-clone"),mw.$(".mce-edit-focus",a).removeClass("mce-edit-focus"),mw.$(".mce-edit-body",a).removeClass("mce-edit-body"),mw.$("[data-mce-style]",a).removeAttr("data-mce-style"),mw.$("[mce-content-body]",a).removeAttr("mce-content-body"),mw.$("[data-mce-style]",a).removeAttr("data-mce-style"),mw.$("[data-mce-selected]",a).removeAttr("data-mce-selected"),mw.$("[data-mce-href]",a).removeAttr("data-mce-href"),mw.$("-module",a).removeClass("-module"),mw.$(".empty-element",a).remove(),mw.$(".empty-element",a).remove(),mw.$("[data-mce-bogus]",a).remove(),mw.$(".edit .ui-resizable-handle",a).remove(),mw.$("script",a).remove(),mw.$(".moveable-control-box",a).remove(),mw.tools.classNamespaceDelete("all","ui-",a,"starts"),mw.$("[contenteditable]",a).removeAttr("contenteditable");for(var t=a.querySelectorAll("[contenteditable]"),i=t.length,r=0;r<i;r++)t[r].removeAttribute("contenteditable");for(var t=a.querySelectorAll(".module"),i=t.length,r=0;r<i;r++)t[r].querySelector(".edit")===null&&(t[r].innerHTML="");return a},htmlAttrValidate:function(e){var a=[];return $.each(e,function(){var t=this.outerHTML;t=t.replace(/url\(&quot;/g,"url('"),t=t.replace(/jpg&quot;/g,"jpg'"),t=t.replace(/jpeg&quot;/g,"jpeg'"),t=t.replace(/png&quot;/g,"png'"),t=t.replace(/gif&quot;/g,"gif'"),a.push($(t)[0])}),a},cleanUnwantedTags:function(e){return mw.$(".mw-skip-and-remove,script",e).remove(),e},animationsClearFix:function(e){return mw.$('[class*="animate__"]').each(function(){mw.tools.classNamespaceDelete(this,"animate__")}),e},collectData:function(e){mw.$(e).each(function(){mw.$("meta",this).remove(),$(".mw-le-spacer",this).empty().removeAttr("data-resizable").removeAttr("style")}),e=this.htmlAttrValidate(e);var a=e.length,t=0,i={},r={};if(a>0)for(;t<a;t++){i.item=e[t];var n=mw.tools.mwattr(i.item,"rel");n||(mw.$(i.item).removeClass("changed"),mw.tools.foreachParents(i.item,function(d){var u=this.className,g=mw.tools.mwattr(this,"rel");mw.tools.hasClass(u,"edit")&&mw.tools.hasClass(u,"changed")&&g&&(i.item=this,mw.tools.stopLoop(d))}));var n=mw.tools.mwattr(i.item,"rel");if(!n){var c=i.item.id?"#"+i.item.id:"";console.warn("Skipped save: .edit"+c+" element does not have rel attribute.");continue}mw.$(i.item).removeClass("changed orig_changed"),mw.$(i.item).removeClass("module-over"),mw.$(".mw-le-ghost-layout",i.item).remove(),mw.$("#mw-non-existing-temp-element-holder",i.item).remove(),mw.$(".module-over",i.item).each(function(){mw.$(this).removeClass("module-over")}),mw.$(".element[data-mwplaceholder]",i.item).each(function(){var d=!this.innerHTML.trim();d||mw.$(this).removeAttr("data-mwplaceholder")}),mw.$(".element.lipsum",i.item).each(function(){mw.$(this).removeClass("lipsum")}),mw.$("[data-mw-live-edithover]",i.item).each(function(){mw.$(this).removeAttr("data-mw-live-edithover")}),mw.$("[data-mw-temp-option-save]",i.item).each(function(){mw.$(this).removeAttr("data-mw-temp-option-save")}),mw.$("[class]",i.item).each(function(){var d=this.getAttribute("class");typeof d=="string"&&(d=d.trim()),d||this.removeAttribute("class")});var s=mw.liveEditSaveService.cleanUnwantedTags(i.item).innerHTML,m={},o=i.item.attributes;if(o.length>0)for(var l=0,w=o.length;l<w;l++)m[o[l].nodeName]=o[l].nodeValue;var f={attributes:m,html:s},p="field_data_"+t;r[p]=f}return r},getData:function(e){var a=mw.liveEditSaveService.parseContent(e).body,t=a.querySelectorAll(".edit.changed");return mw.liveEditSaveService.collectData(t)},saveDisabled:!1,draftDisabled:!1,save:function(e,a,t){if(mw.trigger("beforeSaveStart",e),mw.top().app&&mw.top().app&&mw.top().app.cssEditor&&mw.top().app.cssEditor.publishIfChanged(),mw.top().app&&mw.top().app&&mw.top().options&&mw.top().options.publishTempOptions(document),mw.liveEditSaveService.saveDisabled)return!1;if(!e){var i=mw.liveEditSaveService.parseContent().body,r=i.querySelectorAll(".edit.changed");e=mw.liveEditSaveService.collectData(r)}var n=(mw.__pageAnimations||[]).filter(function(m){return m.animation!=="none"});if(n&&n.length>0){var c={group:"template",key:"animations-global",value:JSON.stringify(n)};mw.top().options.saveOption(c)}if(mw.tools.isEmptyObject(e))return a&&a.call({}),!1;mw._liveeditData=e,mw.trigger("saveStart",mw._liveeditData);var s=mw.liveEditSaveService.coreSave(mw._liveeditData);return s.error(function(m){s.status==403&&(mw.dialog({id:"save_content_error_iframe_modal",html:"<iframe id='save_content_error_iframe' style='overflow-x:hidden;overflow-y:auto;' class='mw-modal-frame' ></iframe>",width:$(window).width()-90,height:$(window).height()-90}),mw.askusertostay=!1,mw.$("#save_content_error_iframe").ready(function(){var o=document.getElementById("save_content_error_iframe").contentWindow.document;o.open(),o.write(s.responseText),o.close();var l=0;o=document.getElementById("save_content_error_iframe").contentWindow.document,mw.$("#save_content_error_iframe").load(function(){var w=mw.$(".challenge-form",o).length;l++,w&&l==2&&setTimeout(function(){mw.askusertostay=!1,mw.$("#save_content_error_iframe_modal").remove()},150)})})),t&&t.call(m)}),s.success(function(m){mw.$(".edit.changed").removeClass("changed"),mw.$(".orig_changed").removeClass("orig_changed"),document.querySelector(".edit.changed")!==null?mw.liveEditSaveService.save():(mw.askusertostay=!1,mw.trigger("saveEnd",m)),a&&a.call(m)}),s.fail(function(m,o,l){mw.trigger("saveFailed",o,l),t&&t.call(sdata)}),s}},mw.saveLiveEdit=async()=>new Promise(e=>{mw.liveEditSaveService.save(void 0,()=>e(!0),()=>e(!1))}),mw.top().app.save=async()=>await mw.saveLiveEdit(),addEventListener("load",()=>{window.addEventListener("keydown",function(a){mw.top().app.canvas.dispatch("iframeKeyDown",{event:a})}),mw.$("span.mw-powered-by").on("click",function(a){return mw.top().tools.open_global_module_settings_modal("white_label/admin","mw-powered-by"),!1}),function(){function a(t){const i=!t.innerHTML.trim();i&&t.innerHTML.trim()===t.textContent.trim()||t.classList[i?"add":"remove"]("mw-le-empty-element")}document.querySelectorAll(".edit").forEach(function(t){t.__$$_handleEmptyEditFields||(t.__$$_handleEmptyEditFields=!0,a(t),t.addEventListener("input",function(){a(this)}))}),mw.top().app.on("editChanged",t=>{setTimeout(()=>a(t))})}()});let v=null;mw.top().app.isNavigating=()=>!!v&&v.returnValue&&v.defaultPrevented===!0,self.onbeforeunload=function(e){v=e;var a=self;if(a.mw.isNavigating=!0,typeof mw.top=="function"&&mw.top().app.canvas&&mw.top().app.canvas.dispatch("liveEditCanvasBeforeUnload"),setTimeout(function(i){i&&i&&i.mw&&(i.mw.isNavigating=!1)},1,a),a&&a.mw&&a.mw.askusertostay)return!0;if(typeof mw.top=="function"&&mw.top().app.canvas){var t=mw.top().app.canvas.getFrame();t&&t.parentElement&&mw.top().spinner({element:t.parentElement,decorate:!0,size:52}).show()}},mw.drag=mw.drag||{},mw.drag.save=function(){return mw.liveEditSaveService.save()},mw.drag.fix_placeholders=function(e,a){a=a||".edit .row";var t="div.col-md",i=mw.top().app.templateSettings.helperClasses.external_grids_col_classes,r;for(r=i.length-1;r>=0;--r)t+=",div."+i[r];mw.$(a).each(function(){var n=mw.$(this);n.children(t).each(function(){var c=mw.$(this).children("*");if(c.size()==0){mw.$(this).append('<div class="element" id="mw-element-'+mw.random()+'"></div>');var c=mw.$(this).children("div.element")}})})},mw.drag.module_settings=function(){var e=mw.top().app.liveEdit.moduleHandle.getTarget();return mw.top().app.editor.dispatch("onModuleSettingsRequest",e)},document.documentElement.addEventListener("click",function(e){var a=e.target,t=mw.tools.firstParentOrCurrentWithTag(a,"a");if(t&&t.href.indexOf("javascript:")!==0&&!t.isContentEditable){const i=document.createElement("a");i.href=t.href,i.host!==location.host&&(!t.target||t.target==="_self")&&(e.preventDefault(),open(t.href))}}),document.addEventListener("keydown",function(e){if(e.ctrlKey&&e.keyCode===83)return mw.top().app.editor.dispatch("Ctrl+S",e)}),document.body.addEventListener("mouseenter",function(e){$("body").removeClass("mw-live-body-mouse-moved-outside")}),document.body.addEventListener("mouseleave",function(e){$("body").addClass("mw-live-body-mouse-moved-outside")})}self===top&&window.addEventListener("load",v=>{if(window.mwLiveEditIframeBackUrl){var e=document.createElement("a");e.id="back-to-live-sticky-button",e.textContent="Go Live Edit",e.href=window.mwLiveEditIframeBackUrl,e.classList.add("sticky"),document.body.appendChild(e),e.classList.add("sticky");var a=document.createElement("style");a.textContent=`
                    #back-to-live-sticky-button {
                        position: fixed;
                        left: 50%;
                        transform: translateX(-50%);
                        z-index: 1001;
                        transition: top 0.3s;
                        background: #3498db;
                        color: #fff !important;
                        padding: 10px 20px;
                        border-radius: 5px;
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;
                        font-family: Arial, sans-serif;
                        border: none;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                        cursor: pointer;
                    }

                    #back-to-live-sticky-button:hover {
                        background: #2980b9;
                    }


                    #back-to-live-sticky-button.sticky {
                        top: 0;
                    }




            `,document.head.appendChild(a)}document.querySelectorAll('.no-select [class*="col"]').forEach(function(t){Array.from(t.children).filter(i=>i.classList.contains("element")).length&&t.classList.add("allow-select")})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
