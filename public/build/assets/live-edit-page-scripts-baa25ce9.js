window.self!==window.top&&(mw.require("liveedit.css"),mw.liveEditSaveService={grammarlyFix:function(e){return mw.$("grammarly-btn",e).remove(),mw.$("grammarly-card",e).remove(),mw.$("g.gr_",e).each(function(){mw.$(this).replaceWith(this.innerHTML)}),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("[data-gramm]",e).removeAttr("data-gramm"),mw.$("[data-gramm_id]",e).removeAttr("data-gramm_id"),mw.$("grammarly-card",e).remove(),mw.$("grammarly-inline-cards",e).remove(),mw.$("grammarly-popups",e).remove(),mw.$("grammarly-extension",e).remove(),e},saving:!1,coreSave:function(e){if(!e)return!1;$.each(e,function(){var a=mw.tools.parseHtml(this.html).body;mw.liveEditSaveService.grammarlyFix(a),mw.liveEditSaveService.animationsClearFix(a),this.html=a.innerHTML}),mw.liveEditSaveService.saving=!0,e=JSON.stringify(e),e=btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,function(r,i){return String.fromCharCode("0x"+i)})),e={data_base64:e};var t=mw.ajax({type:"POST",url:mw.settings.api_url+"save_edit",data:e,dataType:"json",success:function(a){a&&a.new_page_url&&!mw.liveEditSaveService.DraftSaving&&(window.mw.parent().askusertostay=!1,window.mw.askusertostay=!1,window.location.href=a.new_page_url)}});return t.always(function(){mw.liveEditSaveService.saving=!1}),t},parseContent:function(e){e=e||document.body;var t=mw.tools.parseHtml(e.innerHTML);mw.$(".element-current",t).removeClass("element-current"),mw.$(".element-active",t).removeClass("element-active"),mw.$(".disable-resize",t).removeClass("disable-resize"),mw.$(".mw-module-drag-clone",t).removeClass("mw-module-drag-clone"),mw.$(".ui-draggable",t).removeClass("ui-draggable"),mw.$(".ui-draggable-handle",t).removeClass("ui-draggable-handle"),mw.$(".mt-ready",t).removeClass("mt-ready"),mw.$(".mw-webkit-drag-hover-binded",t).removeClass("mw-webkit-drag-hover-binded"),mw.$(".module-cat-toggle-Modules",t).removeClass("module-cat-toggle-Modules"),mw.$(".mw-module-drag-clone",t).removeClass("mw-module-drag-clone"),mw.$("-module",t).removeClass("-module"),mw.$(".empty-element",t).remove(),mw.$(".empty-element",t).remove(),mw.$(".edit .ui-resizable-handle",t).remove(),mw.$("script",t).remove(),mw.tools.classNamespaceDelete("all","ui-",t,"starts"),mw.$("[contenteditable]",t).removeAttr("contenteditable");for(var a=t.querySelectorAll("[contenteditable]"),r=a.length,i=0;i<r;i++)a[i].removeAttribute("contenteditable");for(var a=t.querySelectorAll(".module"),r=a.length,i=0;i<r;i++)a[i].querySelector(".edit")===null&&(a[i].innerHTML="");return t},htmlAttrValidate:function(e){var t=[];return $.each(e,function(){var a=this.outerHTML;a=a.replace(/url\(&quot;/g,"url('"),a=a.replace(/jpg&quot;/g,"jpg'"),a=a.replace(/jpeg&quot;/g,"jpeg'"),a=a.replace(/png&quot;/g,"png'"),a=a.replace(/gif&quot;/g,"gif'"),t.push($(a)[0])}),t},cleanUnwantedTags:function(e){return mw.$(".mw-skip-and-remove,script",e).remove(),e},animationsClearFix:function(e){return mw.$('[class*="animate__"]').each(function(){mw.tools.classNamespaceDelete(this,"animate__")}),e},collectData:function(e){mw.$(e).each(function(){mw.$("meta",this).remove(),$(".mw-le-spacer",this).empty().removeAttr("data-resizable").removeAttr("style")}),e=this.htmlAttrValidate(e);var t=e.length,a=0,r={},i={};if(t>0)for(;a<t;a++){r.item=e[a];var m=mw.tools.mwattr(r.item,"rel");m||(mw.$(r.item).removeClass("changed"),mw.tools.foreachParents(r.item,function(c){var w=this.className,p=mw.tools.mwattr(this,"rel");mw.tools.hasClass(w,"edit")&&mw.tools.hasClass(w,"changed")&&p&&(r.item=this,mw.tools.stopLoop(c))}));var m=mw.tools.mwattr(r.item,"rel");if(!m){var d=r.item.id?"#"+r.item.id:"";console.warn("Skipped save: .edit"+d+" element does not have rel attribute.");continue}mw.$(r.item).removeClass("changed orig_changed"),mw.$(r.item).removeClass("module-over"),mw.$(".module-over",r.item).each(function(){mw.$(this).removeClass("module-over")}),mw.$("[class]",r.item).each(function(){var c=this.getAttribute("class");typeof c=="string"&&(c=c.trim()),c||this.removeAttribute("class")});var s=mw.liveEditSaveService.cleanUnwantedTags(r.item).innerHTML,o={},n=r.item.attributes;if(n.length>0)for(var l=0,v=n.length;l<v;l++)o[n[l].nodeName]=n[l].nodeValue;var u={attributes:o,html:s},f="field_data_"+a;i[f]=u}return i},getData:function(e){var t=mw.liveEditSaveService.parseContent(e).body,a=t.querySelectorAll(".edit.changed");return mw.liveEditSaveService.collectData(a)},saveDisabled:!1,draftDisabled:!1,save:function(e,t,a){if(mw.trigger("beforeSaveStart",e),mw.top().app&&mw.top().app&&mw.top().app.cssEditor&&mw.top().app.cssEditor.publishIfChanged(),mw.liveEditSaveService.saveDisabled)return!1;if(!e){var r=mw.liveEditSaveService.parseContent().body,i=r.querySelectorAll(".edit.changed");e=mw.liveEditSaveService.collectData(i)}var m=(mw.__pageAnimations||[]).filter(function(o){return o.animation!=="none"});if(m&&m.length>0){var d={group:"template",key:"animations-global",value:JSON.stringify(m)};mw.options.saveOption(d)}if(mw.tools.isEmptyObject(e))return t&&t.call({}),!1;mw._liveeditData=e,mw.trigger("saveStart",mw._liveeditData);var s=mw.liveEditSaveService.coreSave(mw._liveeditData);return s.error(function(o){s.status==403&&(mw.dialog({id:"save_content_error_iframe_modal",html:"<iframe id='save_content_error_iframe' style='overflow-x:hidden;overflow-y:auto;' class='mw-modal-frame' ></iframe>",width:$(window).width()-90,height:$(window).height()-90}),mw.askusertostay=!1,mw.$("#save_content_error_iframe").ready(function(){var n=document.getElementById("save_content_error_iframe").contentWindow.document;n.open(),n.write(s.responseText),n.close();var l=0;n=document.getElementById("save_content_error_iframe").contentWindow.document,mw.$("#save_content_error_iframe").load(function(){var v=mw.$(".challenge-form",n).length;l++,v&&l==2&&setTimeout(function(){mw.askusertostay=!1,mw.$("#save_content_error_iframe_modal").remove()},150)})})),a&&a.call(o)}),s.success(function(o){mw.$(".edit.changed").removeClass("changed"),mw.$(".orig_changed").removeClass("orig_changed"),document.querySelector(".edit.changed")!==null?mw.liveEditSaveService.save():(mw.askusertostay=!1,mw.trigger("saveEnd",o)),t&&t.call(o)}),s.fail(function(o,n,l){mw.trigger("saveFailed",n,l),a&&a.call(sdata)}),s}},addEventListener("load",()=>{const e=async()=>new Promise(t=>{mw.liveEditSaveService.save(void 0,()=>t(!0),()=>t(!1))});mw.top().app.save=async()=>await e(),window.addEventListener("keydown",function(t){mw.top().app.canvas.dispatch("iframeKeyDown",{event:t})})}),self.onbeforeunload=function(e){mw.top().app.canvas.dispatch("liveEditCanvasBeforeUnload");var t=mw.top().app.canvas.getWindow();if(t&&t.mw&&t.mw.askusertostay)return!0;mw.top().spinner({element:mw.top().app.canvas.getFrame().parentElement,decorate:!0,size:52}).show()},mw.drag=mw.drag||{},mw.drag.save=function(){return mw.liveEditSaveService.save()},mw.drag.fix_placeholders=function(e,t){t=t||".edit .row";var a="div.col-md",r=mw.top().app.templateSettings.helperClasses.external_grids_col_classes,i;for(i=r.length-1;i>=0;--i)a+=",div."+r[i];mw.$(t).each(function(){var m=mw.$(this);m.children(a).each(function(){var d=mw.$(this).children("*");if(d.size()==0){mw.$(this).append('<div class="element" id="mw-element-'+mw.random()+'"></div>');var d=mw.$(this).children("div.element")}})})},mw.drag.module_settings=function(){var e=mw.top().app.liveEdit.moduleHandle.getTarget();return mw.top().app.editor.dispatch("onModuleSettingsRequest",e)},document.addEventListener("keydown",function(e){if(e.ctrlKey&&e.key==="s")return mw.top().app.editor.dispatch("Ctrl+S",e)}));self===top&&window.addEventListener("load",e=>{if(window.mwLiveEditIframeBackUrl){var t=document.createElement("a");t.id="back-to-live-sticky-button",t.textContent="Live Edit",t.href=window.mwLiveEditIframeBackUrl,t.classList.add("sticky"),document.body.appendChild(t),t.classList.add("sticky");var a=document.createElement("style");a.textContent=`
                #back-to-live-sticky-button {
                    position: absolute;
                    left: 50%;
                    transform: translateX(-50%);
                    z-index: 999;
                    transition: top 0.3s;
                    background: #000;
                    padding: 10px 20px;
                    border-radius: 5px;
                    border-top-left-radius: 0;
                    border-top-right-radius: 0;
                }
                 a#back-to-live-sticky-button {
                 color: #fff;
                 }
                #back-to-live-sticky-button.sticky {
                    top: 0;
                }
            `,document.head.appendChild(a)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1lZGl0LXBhZ2Utc2NyaXB0cy1iYWEyNWNlOS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL01pY3Jvd2ViZXJQYWNrYWdlcy9MaXZlRWRpdC9yZXNvdXJjZXMvanMvdWkvbGl2ZS1lZGl0LXBhZ2Utc2NyaXB0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpZih3aW5kb3cuc2VsZiAhPT0gd2luZG93LnRvcCkge1xyXG5cclxuXHJcbiAgICAvL213LnJlcXVpcmUoJ29wdGlvbnMuanMnKTtcclxuICAgIG13LnJlcXVpcmUoJ2xpdmVlZGl0LmNzcycpO1xyXG5cclxuXHJcbiAgICBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlID0ge1xyXG4gICAgICAgIGdyYW1tYXJseUZpeDogZnVuY3Rpb24gKGRhdGEpIHtcclxuXHJcbiAgICAgICAgICAgIG13LiQoXCJncmFtbWFybHktYnRuXCIsIGRhdGEpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBtdy4kKFwiZ3JhbW1hcmx5LWNhcmRcIiwgZGF0YSkucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIG13LiQoXCJnLmdyX1wiLCBkYXRhKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG13LiQodGhpcykucmVwbGFjZVdpdGgodGhpcy5pbm5lckhUTUwpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbXcuJChcIltkYXRhLWdyYW1tX2lkXVwiLCBkYXRhKS5yZW1vdmVBdHRyKCdkYXRhLWdyYW1tX2lkJyk7XHJcbiAgICAgICAgICAgIG13LiQoXCJbZGF0YS1ncmFtbV1cIiwgZGF0YSkucmVtb3ZlQXR0cignZGF0YS1ncmFtbScpO1xyXG4gICAgICAgICAgICBtdy4kKFwiW2RhdGEtZ3JhbW1faWRdXCIsIGRhdGEpLnJlbW92ZUF0dHIoJ2RhdGEtZ3JhbW1faWQnKTtcclxuICAgICAgICAgICAgbXcuJChcImdyYW1tYXJseS1jYXJkXCIsIGRhdGEpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBtdy4kKFwiZ3JhbW1hcmx5LWlubGluZS1jYXJkc1wiLCBkYXRhKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgbXcuJChcImdyYW1tYXJseS1wb3B1cHNcIiwgZGF0YSkucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIG13LiQoXCJncmFtbWFybHktZXh0ZW5zaW9uXCIsIGRhdGEpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNhdmluZzogZmFsc2UsXHJcbiAgICAgICAgY29yZVNhdmU6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmICghZGF0YSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGJvZHkgPSBtdy50b29scy5wYXJzZUh0bWwodGhpcy5odG1sKS5ib2R5O1xyXG4gICAgICAgICAgICAgICAgbXcubGl2ZUVkaXRTYXZlU2VydmljZS5ncmFtbWFybHlGaXgoYm9keSk7XHJcbiAgICAgICAgICAgICAgICBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLmFuaW1hdGlvbnNDbGVhckZpeChib2R5KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaHRtbCA9IGJvZHkuaW5uZXJIVE1MO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbXcubGl2ZUVkaXRTYXZlU2VydmljZS5zYXZpbmcgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgLyoqKioqKioqKioqKiAgU1RBUlQgYmFzZTY0ICAqKioqKioqKioqKiovXHJcbiAgICAgICAgICAgIGRhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcclxuICAgICAgICAgICAgZGF0YSA9IGJ0b2EoZW5jb2RlVVJJQ29tcG9uZW50KGRhdGEpLnJlcGxhY2UoLyUoWzAtOUEtRl17Mn0pL2csXHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB0b1NvbGlkQnl0ZXMobWF0Y2gsIHAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoJzB4JyArIHAxKTtcclxuICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgZGF0YSA9IHtkYXRhX2Jhc2U2NDogZGF0YX07XHJcbiAgICAgICAgICAgIC8qKioqKioqKioqKiogIEVORCBiYXNlNjQgICoqKioqKioqKioqKi9cclxuXHJcbiAgICAgICAgICAgIHZhciB4aHIgPSBtdy5hamF4KHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgIHVybDogbXcuc2V0dGluZ3MuYXBpX3VybCArICdzYXZlX2VkaXQnLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzYXZlZF9kYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNhdmVkX2RhdGEgJiYgc2F2ZWRfZGF0YS5uZXdfcGFnZV91cmwgJiYgIW13LmxpdmVFZGl0U2F2ZVNlcnZpY2UuRHJhZnRTYXZpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm13LnBhcmVudCgpLmFza3VzZXJ0b3N0YXkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm13LmFza3VzZXJ0b3N0YXkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBzYXZlZF9kYXRhLm5ld19wYWdlX3VybDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHhoci5hbHdheXMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgbXcubGl2ZUVkaXRTYXZlU2VydmljZS5zYXZpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiB4aHI7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYXJzZUNvbnRlbnQ6IGZ1bmN0aW9uIChyb290KSB7XHJcbiAgICAgICAgICAgIHJvb3QgPSByb290IHx8IGRvY3VtZW50LmJvZHk7XHJcbiAgICAgICAgICAgIHZhciBkb2MgPSBtdy50b29scy5wYXJzZUh0bWwocm9vdC5pbm5lckhUTUwpO1xyXG4gICAgICAgICAgICBtdy4kKCcuZWxlbWVudC1jdXJyZW50JywgZG9jKS5yZW1vdmVDbGFzcygnZWxlbWVudC1jdXJyZW50Jyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5lbGVtZW50LWFjdGl2ZScsIGRvYykucmVtb3ZlQ2xhc3MoJ2VsZW1lbnQtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5kaXNhYmxlLXJlc2l6ZScsIGRvYykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGUtcmVzaXplJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5tdy1tb2R1bGUtZHJhZy1jbG9uZScsIGRvYykucmVtb3ZlQ2xhc3MoJ213LW1vZHVsZS1kcmFnLWNsb25lJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy51aS1kcmFnZ2FibGUnLCBkb2MpLnJlbW92ZUNsYXNzKCd1aS1kcmFnZ2FibGUnKTtcclxuICAgICAgICAgICAgbXcuJCgnLnVpLWRyYWdnYWJsZS1oYW5kbGUnLCBkb2MpLnJlbW92ZUNsYXNzKCd1aS1kcmFnZ2FibGUtaGFuZGxlJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5tdC1yZWFkeScsIGRvYykucmVtb3ZlQ2xhc3MoJ210LXJlYWR5Jyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5tdy13ZWJraXQtZHJhZy1ob3Zlci1iaW5kZWQnLCBkb2MpLnJlbW92ZUNsYXNzKCdtdy13ZWJraXQtZHJhZy1ob3Zlci1iaW5kZWQnKTtcclxuICAgICAgICAgICAgbXcuJCgnLm1vZHVsZS1jYXQtdG9nZ2xlLU1vZHVsZXMnLCBkb2MpLnJlbW92ZUNsYXNzKCdtb2R1bGUtY2F0LXRvZ2dsZS1Nb2R1bGVzJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5tdy1tb2R1bGUtZHJhZy1jbG9uZScsIGRvYykucmVtb3ZlQ2xhc3MoJ213LW1vZHVsZS1kcmFnLWNsb25lJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy1tb2R1bGUnLCBkb2MpLnJlbW92ZUNsYXNzKCctbW9kdWxlJyk7XHJcbiAgICAgICAgICAgIG13LiQoJy5lbXB0eS1lbGVtZW50JywgZG9jKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgbXcuJCgnLmVtcHR5LWVsZW1lbnQnLCBkb2MpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBtdy4kKCcuZWRpdCAudWktcmVzaXphYmxlLWhhbmRsZScsIGRvYykucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIG13LiQoJ3NjcmlwdCcsIGRvYykucmVtb3ZlKCk7XHJcblxyXG4gICAgICAgICAgICAvL3ZhciBkb2MgPSBtdy4kKGRvYykuZmluZCgnc2NyaXB0JykucmVtb3ZlKCk7XHJcblxyXG4gICAgICAgICAgICBtdy50b29scy5jbGFzc05hbWVzcGFjZURlbGV0ZSgnYWxsJywgJ3VpLScsIGRvYywgJ3N0YXJ0cycpO1xyXG4gICAgICAgICAgICBtdy4kKFwiW2NvbnRlbnRlZGl0YWJsZV1cIiwgZG9jKS5yZW1vdmVBdHRyKFwiY29udGVudGVkaXRhYmxlXCIpO1xyXG4gICAgICAgICAgICB2YXIgYWxsID0gZG9jLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tjb250ZW50ZWRpdGFibGVdJyksXHJcbiAgICAgICAgICAgICAgICBsID0gYWxsLmxlbmd0aCxcclxuICAgICAgICAgICAgICAgIGkgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKDsgaSA8IGw7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgYWxsW2ldLnJlbW92ZUF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGFsbCA9IGRvYy5xdWVyeVNlbGVjdG9yQWxsKCcubW9kdWxlJyksXHJcbiAgICAgICAgICAgICAgICBsID0gYWxsLmxlbmd0aCxcclxuICAgICAgICAgICAgICAgIGkgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKDsgaSA8IGw7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGFsbFtpXS5xdWVyeVNlbGVjdG9yKCcuZWRpdCcpID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxsW2ldLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBkb2M7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBodG1sQXR0clZhbGlkYXRlOiBmdW5jdGlvbiAoZWRpdHMpIHtcclxuICAgICAgICAgICAgdmFyIGZpbmFsID0gW107XHJcbiAgICAgICAgICAgICQuZWFjaChlZGl0cywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGh0bWwgPSB0aGlzLm91dGVySFRNTDtcclxuICAgICAgICAgICAgICAgIGh0bWwgPSBodG1sLnJlcGxhY2UoL3VybFxcKCZxdW90Oy9nLCBcInVybCgnXCIpO1xyXG4gICAgICAgICAgICAgICAgaHRtbCA9IGh0bWwucmVwbGFjZSgvanBnJnF1b3Q7L2csIFwianBnJ1wiKTtcclxuICAgICAgICAgICAgICAgIGh0bWwgPSBodG1sLnJlcGxhY2UoL2pwZWcmcXVvdDsvZywgXCJqcGVnJ1wiKTtcclxuICAgICAgICAgICAgICAgIGh0bWwgPSBodG1sLnJlcGxhY2UoL3BuZyZxdW90Oy9nLCBcInBuZydcIik7XHJcbiAgICAgICAgICAgICAgICBodG1sID0gaHRtbC5yZXBsYWNlKC9naWYmcXVvdDsvZywgXCJnaWYnXCIpO1xyXG4gICAgICAgICAgICAgICAgZmluYWwucHVzaCgkKGh0bWwpWzBdKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgcmV0dXJuIGZpbmFsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xlYW5VbndhbnRlZFRhZ3M6IGZ1bmN0aW9uIChib2R5KSB7XHJcblxyXG5cclxuICAgICAgICAgICAgbXcuJCgnLm13LXNraXAtYW5kLXJlbW92ZSxzY3JpcHQnLCBib2R5KS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGJvZHk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhbmltYXRpb25zQ2xlYXJGaXg6IGZ1bmN0aW9uIChib2R5KSB7XHJcbiAgICAgICAgICAgIG13LiQoJ1tjbGFzcyo9XCJhbmltYXRlX19cIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG13LnRvb2xzLmNsYXNzTmFtZXNwYWNlRGVsZXRlKHRoaXMsICdhbmltYXRlX18nKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBib2R5O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29sbGVjdERhdGE6IGZ1bmN0aW9uIChlZGl0cykge1xyXG4gICAgICAgICAgICBtdy4kKGVkaXRzKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG13LiQoJ21ldGEnLCB0aGlzKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICQoJy5tdy1sZS1zcGFjZXInLCB0aGlzKS5lbXB0eSgpLnJlbW92ZUF0dHIoJ2RhdGEtcmVzaXphYmxlJykucmVtb3ZlQXR0cignc3R5bGUnKVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGVkaXRzID0gdGhpcy5odG1sQXR0clZhbGlkYXRlKGVkaXRzKTtcclxuICAgICAgICAgICAgdmFyIGwgPSBlZGl0cy5sZW5ndGgsXHJcbiAgICAgICAgICAgICAgICBpID0gMCxcclxuICAgICAgICAgICAgICAgIGhlbHBlciA9IHt9LFxyXG4gICAgICAgICAgICAgICAgbWFzdGVyID0ge307XHJcbiAgICAgICAgICAgIGlmIChsID4gMCkge1xyXG4gICAgICAgICAgICAgICAgZm9yICg7IGkgPCBsOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBoZWxwZXIuaXRlbSA9IGVkaXRzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZWwgPSBtdy50b29scy5td2F0dHIoaGVscGVyLml0ZW0sICdyZWwnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdy4kKGhlbHBlci5pdGVtKS5yZW1vdmVDbGFzcygnY2hhbmdlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdy50b29scy5mb3JlYWNoUGFyZW50cyhoZWxwZXIuaXRlbSwgZnVuY3Rpb24gKGxvb3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbHMgPSB0aGlzLmNsYXNzTmFtZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWwgPSBtdy50b29scy5td2F0dHIodGhpcywgJ3JlbCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG13LnRvb2xzLmhhc0NsYXNzKGNscywgJ2VkaXQnKSAmJiBtdy50b29scy5oYXNDbGFzcyhjbHMsICdjaGFuZ2VkJykgJiYgKCEhcmVsKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHBlci5pdGVtID0gdGhpcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdy50b29scy5zdG9wTG9vcChsb29wKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZWwgPSBtdy50b29scy5td2F0dHIoaGVscGVyLml0ZW0sICdyZWwnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmllbGQgPSAhIWhlbHBlci5pdGVtLmlkID8gJyMnICsgaGVscGVyLml0ZW0uaWQgOiAnJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdTa2lwcGVkIHNhdmU6IC5lZGl0JyArIGZpZWxkICsgJyBlbGVtZW50IGRvZXMgbm90IGhhdmUgcmVsIGF0dHJpYnV0ZS4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIG13LiQoaGVscGVyLml0ZW0pLnJlbW92ZUNsYXNzKCdjaGFuZ2VkIG9yaWdfY2hhbmdlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIG13LiQoaGVscGVyLml0ZW0pLnJlbW92ZUNsYXNzKCdtb2R1bGUtb3ZlcicpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBtdy4kKCcubW9kdWxlLW92ZXInLCBoZWxwZXIuaXRlbSkuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG13LiQodGhpcykucmVtb3ZlQ2xhc3MoJ21vZHVsZS1vdmVyJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbXcuJCgnW2NsYXNzXScsIGhlbHBlci5pdGVtKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNscyA9IHRoaXMuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY2xzID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xzID0gY2xzLnRyaW0oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNscykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gbXcubGl2ZUVkaXRTYXZlU2VydmljZS5jbGVhblVud2FudGVkVGFncyhoZWxwZXIuaXRlbSkuaW5uZXJIVE1MO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhdHRyX29iaiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhdHRycyA9IGhlbHBlci5pdGVtLmF0dHJpYnV0ZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFpID0gMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsID0gYXR0cnMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKDsgYWkgPCBhbDsgYWkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cl9vYmpbYXR0cnNbYWldLm5vZGVOYW1lXSA9IGF0dHJzW2FpXS5ub2RlVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9iaiA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogYXR0cl9vYmosXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IGNvbnRlbnRcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBvYmpkYXRhID0gXCJmaWVsZF9kYXRhX1wiICsgaTtcclxuICAgICAgICAgICAgICAgICAgICBtYXN0ZXJbb2JqZGF0YV0gPSBvYmo7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG1hc3RlcjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGdldERhdGE6IGZ1bmN0aW9uIChyb290KSB7XHJcbiAgICAgICAgICAgIHZhciBib2R5ID0gbXcubGl2ZUVkaXRTYXZlU2VydmljZS5wYXJzZUNvbnRlbnQocm9vdCkuYm9keSxcclxuICAgICAgICAgICAgICAgIGVkaXRzID0gYm9keS5xdWVyeVNlbGVjdG9yQWxsKCcuZWRpdC5jaGFuZ2VkJyk7XHJcbiAgICAgICAgICAgIHJldHVybiBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLmNvbGxlY3REYXRhKGVkaXRzKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBzYXZlRGlzYWJsZWQ6IGZhbHNlLFxyXG4gICAgICAgIGRyYWZ0RGlzYWJsZWQ6IGZhbHNlLFxyXG4gICAgICAgIHNhdmU6IGZ1bmN0aW9uIChkYXRhLCBzdWNjZXNzLCBmYWlsKSB7XHJcbiAgICAgICAgICAgIG13LnRyaWdnZXIoJ2JlZm9yZVNhdmVTdGFydCcsIGRhdGEpO1xyXG4gICAgICAgICAgICAvLyB0b2RvOlxyXG5cclxuICAgICAgICAgICAgIGlmKG13LnRvcCgpLmFwcCkge1xyXG4gICAgICAgICAgICAgICAgICBpZiAobXcudG9wKCkuYXBwICYmIG13LnRvcCgpLmFwcC5jc3NFZGl0b3IpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICBtdy50b3AoKS5hcHAuY3NzRWRpdG9yLnB1Ymxpc2hJZkNoYW5nZWQoKTtcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLnNhdmVEaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGJvZHkgPSBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLnBhcnNlQ29udGVudCgpLmJvZHksXHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdHMgPSBib2R5LnF1ZXJ5U2VsZWN0b3JBbGwoJy5lZGl0LmNoYW5nZWQnKTtcclxuICAgICAgICAgICAgICAgIGRhdGEgPSBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLmNvbGxlY3REYXRhKGVkaXRzKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdmFyIGFuaW1hdGlvbnMgPSAobXcuX19wYWdlQW5pbWF0aW9ucyB8fCBbXSkuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS5hbmltYXRpb24gIT09ICdub25lJztcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoYW5pbWF0aW9ucyAmJiBhbmltYXRpb25zLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGdyb3VwOiAndGVtcGxhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGtleTogJ2FuaW1hdGlvbnMtZ2xvYmFsJyxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogSlNPTi5zdHJpbmdpZnkoYW5pbWF0aW9ucylcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgbXcub3B0aW9ucy5zYXZlT3B0aW9uKG9wdGlvbnMpO1xyXG4gICAgICAgICAgICAgICAgLy8gYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiAge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIG13Lm9wdGlvbnMuc2F2ZU9wdGlvbihvcHRpb25zLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIGlmIChtdy50b29scy5pc0VtcHR5T2JqZWN0KGRhdGEpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MuY2FsbCh7fSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIDtcclxuXHJcbiAgICAgICAgICAgIG13Ll9saXZlZWRpdERhdGEgPSBkYXRhO1xyXG5cclxuICAgICAgICAgICAgbXcudHJpZ2dlcignc2F2ZVN0YXJ0JywgbXcuX2xpdmVlZGl0RGF0YSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgeGhyID0gbXcubGl2ZUVkaXRTYXZlU2VydmljZS5jb3JlU2F2ZShtdy5fbGl2ZWVkaXREYXRhKTtcclxuICAgICAgICAgICAgeGhyLmVycm9yKGZ1bmN0aW9uIChzZGF0YSkge1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09IDQwMykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtb2RhbCA9IG13LmRpYWxvZyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZV9tb2RhbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IFwiPGlmcmFtZSBpZD0nc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZScgc3R5bGU9J292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bzsnIGNsYXNzPSdtdy1tb2RhbC1mcmFtZScgPjwvaWZyYW1lPlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJCh3aW5kb3cpLndpZHRoKCkgLSA5MCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAkKHdpbmRvdykuaGVpZ2h0KCkgLSA5MFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBtdy5hc2t1c2VydG9zdGF5ID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIG13LiQoXCIjc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZVwiKS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkb2MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZScpLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYy5vcGVuKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYy53cml0ZSh4aHIucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzYXZlX2NvbnRlbnRfZXJyb3JfaWZyYW1lX3JlbG9hZHMgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZScpLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdy4kKFwiI3NhdmVfY29udGVudF9lcnJvcl9pZnJhbWVcIikubG9hZChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjbG91ZGZsYXJlIGNhcHRjaGFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc19jZiA9IG13LiQoJy5jaGFsbGVuZ2UtZm9ybScsIGRvYykubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZV9jb250ZW50X2Vycm9yX2lmcmFtZV9yZWxvYWRzKys7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2NmICYmIHNhdmVfY29udGVudF9lcnJvcl9pZnJhbWVfcmVsb2FkcyA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG13LmFza3VzZXJ0b3N0YXkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXcuJCgnI3NhdmVfY29udGVudF9lcnJvcl9pZnJhbWVfbW9kYWwnKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAxNTApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGZhaWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBmYWlsLmNhbGwoc2RhdGEpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB4aHIuc3VjY2VzcyhmdW5jdGlvbiAoc2RhdGEpIHtcclxuICAgICAgICAgICAgICAgIG13LiQoJy5lZGl0LmNoYW5nZWQnKS5yZW1vdmVDbGFzcygnY2hhbmdlZCcpO1xyXG4gICAgICAgICAgICAgICAgbXcuJCgnLm9yaWdfY2hhbmdlZCcpLnJlbW92ZUNsYXNzKCdvcmlnX2NoYW5nZWQnKTtcclxuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWRpdC5jaGFuZ2VkJykgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLnNhdmUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbXcuYXNrdXNlcnRvc3RheSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIG13LnRyaWdnZXIoJ3NhdmVFbmQnLCBzZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MuY2FsbChzZGF0YSlcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB4aHIuZmFpbChmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgICAgICBtdy50cmlnZ2VyKCdzYXZlRmFpbGVkJywgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZhaWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBmYWlsLmNhbGwoc2RhdGEpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4geGhyO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2F2ZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBtdy5saXZlRWRpdFNhdmVTZXJ2aWNlLnNhdmUodW5kZWZpbmVkLCAoKSA9PiByZXNvbHZlKHRydWUpLCAoKSA9PiByZXNvbHZlKGZhbHNlKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgbXcudG9wKCkuYXBwLnNhdmUgPSBhc3luYyAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgc2F2ZSgpXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgbXcudG9wKCkuYXBwLmNhbnZhcy5kaXNwYXRjaCgnaWZyYW1lS2V5RG93bicsIHtldmVudH0pXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgIHNlbGYub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBtdy50b3AoKS5hcHAuY2FudmFzLmRpc3BhdGNoKCdsaXZlRWRpdENhbnZhc0JlZm9yZVVubG9hZCcpO1xyXG5cclxuXHJcbiAgICAgICAgLy8gcHJldmVudCB1c2VyIGZyb20gbGVhdmluZyBpZiB0aGVyZSBhcmUgdW5zYXZlZCBjaGFuZ2VzXHJcbiAgICAgICAgdmFyIGxpdmVFZGl0SWZyYW1lID0gKG13LnRvcCgpLmFwcC5jYW52YXMuZ2V0V2luZG93KCkpO1xyXG4gICAgICAgIGlmIChsaXZlRWRpdElmcmFtZVxyXG4gICAgICAgICAgICAmJiBsaXZlRWRpdElmcmFtZS5tdyAmJiBsaXZlRWRpdElmcmFtZS5tdy5hc2t1c2VydG9zdGF5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG13LnRvcCgpLnNwaW5uZXIoe2VsZW1lbnQ6IG13LnRvcCgpLmFwcC5jYW52YXMuZ2V0RnJhbWUoKS5wYXJlbnRFbGVtZW50LCBkZWNvcmF0ZTogdHJ1ZSwgc2l6ZTogNTJ9KS5zaG93KClcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICBtdy5kcmFnID0gbXcuZHJhZyB8fCB7fTtcclxuICAgIG13LmRyYWcuc2F2ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gbXcubGl2ZUVkaXRTYXZlU2VydmljZS5zYXZlKCk7XHJcbiAgICB9O1xyXG4gICAgbXcuZHJhZy5maXhfcGxhY2Vob2xkZXJzID0gZnVuY3Rpb24gKGlzSGFyZCwgc2VsZWN0b3IpIHtcclxuICAgICAgICBzZWxlY3RvciA9IHNlbGVjdG9yIHx8ICcuZWRpdCAucm93JztcclxuXHJcbiAgICAgICAgdmFyIG1vcmVfc2VsZWN0b3JzMiA9ICdkaXYuY29sLW1kJztcclxuICAgICAgICB2YXIgYSA9IG13LnRvcCgpLmFwcC50ZW1wbGF0ZVNldHRpbmdzLmhlbHBlckNsYXNzZXMuZXh0ZXJuYWxfZ3JpZHNfY29sX2NsYXNzZXM7XHJcbiAgICAgICAgdmFyIGluZGV4O1xyXG4gICAgICAgIGZvciAoaW5kZXggPSBhLmxlbmd0aCAtIDE7IGluZGV4ID49IDA7IC0taW5kZXgpIHtcclxuICAgICAgICAgICAgbW9yZV9zZWxlY3RvcnMyICs9ICcsZGl2LicgKyBhW2luZGV4XTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbXcuJChzZWxlY3RvcikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbCA9IG13LiQodGhpcyk7XHJcbiAgICAgICAgICAgIGVsLmNoaWxkcmVuKG1vcmVfc2VsZWN0b3JzMikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW1wdHlfY2hpbGQgPSBtdy4kKHRoaXMpLmNoaWxkcmVuKCcqJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZW1wdHlfY2hpbGQuc2l6ZSgpID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBtdy4kKHRoaXMpLmFwcGVuZCgnPGRpdiBjbGFzcz1cImVsZW1lbnRcIiBpZD1cIm13LWVsZW1lbnQtJyArIG13LnJhbmRvbSgpICsgJ1wiPicgKyAnPC9kaXY+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVtcHR5X2NoaWxkID0gbXcuJCh0aGlzKS5jaGlsZHJlbihcImRpdi5lbGVtZW50XCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIG13LmRyYWcubW9kdWxlX3NldHRpbmdzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0YXJnZXQgPSBtdy50b3AoKS5hcHAubGl2ZUVkaXQubW9kdWxlSGFuZGxlLmdldFRhcmdldCgpO1xyXG4gICAgICAgIHJldHVybiBtdy50b3AoKS5hcHAuZWRpdG9yLmRpc3BhdGNoKCdvbk1vZHVsZVNldHRpbmdzUmVxdWVzdCcsIHRhcmdldCk7XHJcbiAgICB9O1xyXG5cclxuXHJcblxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PT0gJ3MnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBtdy50b3AoKS5hcHAuZWRpdG9yLmRpc3BhdGNoKCdDdHJsK1MnLCBldmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuaWYgKHNlbGYgPT09IHRvcCkge1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIChldmVudCkgPT4ge1xyXG4gICAgICAgIGlmICh3aW5kb3cubXdMaXZlRWRpdElmcmFtZUJhY2tVcmwpIHtcclxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSA8YT4gZWxlbWVudCAoYnV0dG9uKVxyXG4gICAgICAgICAgICB2YXIgc3RpY2t5QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gICAgICAgICAgICBzdGlja3lCdXR0b24uaWQgPSAnYmFjay10by1saXZlLXN0aWNreS1idXR0b24nO1xyXG4gICAgICAgICAgICBzdGlja3lCdXR0b24udGV4dENvbnRlbnQgPSAnTGl2ZSBFZGl0JztcclxuICAgICAgICAgICAgc3RpY2t5QnV0dG9uLmhyZWYgPSB3aW5kb3cubXdMaXZlRWRpdElmcmFtZUJhY2tVcmw7XHJcbiAgICAgICAgICAgIHN0aWNreUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdzdGlja3knKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEFwcGVuZCB0aGUgYnV0dG9uIHRvIHRoZSBkb2N1bWVudCBib2R5XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc3RpY2t5QnV0dG9uKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEFwcGx5IHN0aWNreSBiZWhhdmlvclxyXG4gICAgICAgICAgICBzdGlja3lCdXR0b24uY2xhc3NMaXN0LmFkZCgnc3RpY2t5Jyk7XHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhbmQgYXBwbHkgdGhlIENTUyBzdHlsZSBkeW5hbWljYWxseVxyXG4gICAgICAgICAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICAgICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGBcclxuICAgICAgICAgICAgICAgICNiYWNrLXRvLWxpdmUtc3RpY2t5LWJ1dHRvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogOTk5O1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHRvcCAwLjNzO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgIGEjYmFjay10by1saXZlLXN0aWNreS1idXR0b24ge1xyXG4gICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICNiYWNrLXRvLWxpdmUtc3RpY2t5LWJ1dHRvbi5zdGlja3kge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYDtcclxuXHJcbiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJkYXRhIiwiYm9keSIsIm1hdGNoIiwicDEiLCJ4aHIiLCJzYXZlZF9kYXRhIiwicm9vdCIsImRvYyIsImFsbCIsImwiLCJlZGl0cyIsImZpbmFsIiwiaHRtbCIsImkiLCJoZWxwZXIiLCJtYXN0ZXIiLCJyZWwiLCJsb29wIiwiY2xzIiwiZmllbGQiLCJjb250ZW50IiwiYXR0cl9vYmoiLCJhdHRycyIsImFpIiwiYWwiLCJvYmoiLCJvYmpkYXRhIiwic3VjY2VzcyIsImZhaWwiLCJhbmltYXRpb25zIiwiaXRlbSIsIm9wdGlvbnMiLCJzZGF0YSIsInNhdmVfY29udGVudF9lcnJvcl9pZnJhbWVfcmVsb2FkcyIsImlzX2NmIiwianFYSFIiLCJ0ZXh0U3RhdHVzIiwiZXJyb3JUaHJvd24iLCJzYXZlIiwicmVzb2x2ZSIsImV2ZW50IiwibGl2ZUVkaXRJZnJhbWUiLCJpc0hhcmQiLCJzZWxlY3RvciIsIm1vcmVfc2VsZWN0b3JzMiIsImEiLCJpbmRleCIsImVsIiwiZW1wdHlfY2hpbGQiLCJ0YXJnZXQiLCJzdGlja3lCdXR0b24iLCJzdHlsZSJdLCJtYXBwaW5ncyI6IkFBQUcs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
